function [ nvox, avnvox ] = nvoxabovethresh( type, nsubj, nsims )
% nvoxabovethresh( type, nsubj ) runs the simulations to calculate the
% number of voxels that lie above a given threshold.
%--------------------------------------------------------------------------
% ARGUMENTS
% 
%--------------------------------------------------------------------------
% OUTPUT
% 
%--------------------------------------------------------------------------
% EXAMPLES
% 
%--------------------------------------------------------------------------
% AUTHOR: Sam Davenport.
stdsize = [91,109,91];

if strcmp(type, 'tstat') || strcmp(type, 't')
    Mag = repmat(0.5, 1, 9); %Main simulation setting
    Rad = 10;
    Sig = gensig( Mag, Rad, 6, stdsize, {[45.5, 54.5, 45.5], [20,20,20], [71,20,20], [20,20,71], [20,89,20], [71,89,20], [71,20, 71], [20, 89, 71], [71, 89, 71]} );
end
Sig = Sig(:)';

global server_dir
server_addon = [server_dir, 'SIbootstrap/Simulations/'];

load([server_addon,'Thresholds/store_thresh_nsubj.mat'])
store_thresh_mate = tstat_thresholds(nsubj-1);
threshold = store_thresh_mate(FWHM_index,2);
std_dev = 1;

nvox = 0;
for sim = 1:nsims
    noise = noisegen(stdsize, nSubj, FWHM, 3 );
    data = zeros(nS
    for I = 1:nSubj
        data(I, :) = Sig + std_dev*noise(I,:);
    end
    Sig = Sig./std_dev;
    
    onesamplet = mvtstat(data);
    abovethresh = (onesamplet > threshold);
    nvox = nvox + sum(abovethresh(:));
end

avnvox = nvox/nsims;

end

